#!/bin/bash
#/***************************************************************************
#*                                                                          *
#*  Organization: Lawrence Livermore National Lab (LLNL)                    *
#*   Directorate: Computation                                               *
#*    Department: Computing Applications and Research                       *
#*      Division: S&T Global Security                                       *
#*        Matrix: Atmospheric, Earth and Energy Division                    *
#*       Program: PCMDI                                                     *
#*       Project: Earth Systems Grid Federation (ESGF) Data Node Software   *
#*  First Author: Gavin M. Bell (gavin@llnl.gov)                            *
#*                                                                          *
#****************************************************************************
#*                                                                          *
#*   Copyright (c) 2009, Lawrence Livermore National Security, LLC.         *
#*   Produced at the Lawrence Livermore National Laboratory                 *
#*   Written by: Gavin M. Bell (gavin@llnl.gov)                             *
#*   LLNL-CODE-420962                                                       *
#*                                                                          *
#*   All rights reserved. This file is part of the:                         *
#*   Earth System Grid Federation (ESGF) Data Node Software Stack           *
#*                                                                          *
#*   For details, see http://esgf.org/esg-node/                             *
#*   Please also read this link                                             *
#*    http://esgf.org/LICENSE                                               *
#*                                                                          *
#*   * Redistribution and use in source and binary forms, with or           *
#*   without modification, are permitted provided that the following        *
#*   conditions are met:                                                    *
#*                                                                          *
#*   * Redistributions of source code must retain the above copyright       *
#*   notice, this list of conditions and the disclaimer below.              *
#*                                                                          *
#*   * Redistributions in binary form must reproduce the above copyright    *
#*   notice, this list of conditions and the disclaimer (as noted below)    *
#*   in the documentation and/or other materials provided with the          *
#*   distribution.                                                          *
#*                                                                          *
#*   Neither the name of the LLNS/LLNL nor the names of its contributors    *
#*   may be used to endorse or promote products derived from this           *
#*   software without specific prior written permission.                    *
#*                                                                          *
#*   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    *
#*   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      *
#*   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS      *
#*   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE    *
#*   LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR     *
#*   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,           *
#*   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       *
#*   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF       *
#*   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND    *
#*   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,     *
#*   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT     *
#*   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF     *
#*   SUCH DAMAGE.                                                           *
#*                                                                          *
#***************************************************************************/
#
#**
#   Description:
#   
#   Simple bash script to build python code
#   This is called from the ant build script for the project
#   (yes, could have tried to use pyAntTasks but the derth of
#   documentation and the need for alacrity made this necessary
#   besides, who's afraid of a little bash ;-).
#   
#**

basedir=$(pwd)
python_dist_dir="${basedir}/src/python/esgf/dist"


make_python_egg() {
    echo "Building python egg: $@"
    echo "rooted in $(pwd)"
    local module=${1:?"module name is required"}
    local db_version_num=${2:?"version number of this migration software is required"}
    local python_version=${3:?"version number of python is required"}
    
    local dist_file=$(echo ${module} | tr - _)-${db_version_num}-py${python_version}.egg

    installer_uid=${ESG_USER_UID:-${SUDO_UID:-$(id -u)}}
    installer_gid=${ESG_USER_GID:-${SUDO_GID:-$(id -g)}}
    installer_home=${ESG_USER_HOME:-$(getent passwd ${installer_uid} | awk -F : '{print $6}')}
    
    pushd ${basedir}/src/python/esgf
    python setup.py bdist_egg
    [ $? != 0 ] && echo "ERROR: could not run python setup" && popd >& /dev/null && return 1
    [ -e ${python_dist_dir}/${dist_file} ] && \
        mkdir -p ${basedir}/dist && \
        mv -v ${python_dist_dir}/${dist_file} ${basedir}/dist
    [ $? != 0 ] && echo "ERROR: could not move distribution file [${dist_file}]" && popd >& /dev/null && return 1
    chown -R ${installer_uid}:${installer_gid} ${basedir}/dist
    popd >& /dev/null
    return 0
}

cleanup_build_artifacts() {
    echo "Cleaning up artifacts from python build..."
    pushd ${basedir}/src/python/esgf >& /dev/null
    [ $? != 0 ] && return 1
    rm -rf ${basedir}/src/python/esgf/dist \
        ${basedir}/src/python/esgf/build \
        ${basedir}/src/python/esgf/esgf*.egg-info \
        ${basedir}/src/python/esgf/SQLAlchemy-*.egg \
        ${basedir}/src/python/esgf/sqlalchemy_*.egg
    ret=$?
    [ -e ${basedir}/src/python/esgf/setup.py.tmpl ] && [ -e ${basedir}/src/python/esgf/setup.py ] && rm -v ${basedir}/src/python/esgf/setup.py
    [ -e ${basedir}/src/python/esgf/scripts/esgf_dashboard_initialize.tmpl ] && [ -e ${basedir}/src/python/esgf/scripts/esgf_dashboard_initialize ] && rm -v ${basedir}/src/python/esgf/scripts/esgf_dashboard_initialize
    popd >& /dev/null
    return ${ret}
}

case $1 in
    --make|-m)
        shift
        make_python_egg $@
        ;;
    --clean|-c)
        cleanup_build_artifacts
        ;;
    --all)
        shift
        make_python_egg $@ && cleanup_build_artifacts
        ;;
    --help|-h)
        usage
        ;;
    *)
        printf "\n ERROR: unknown switch \"$1\" \n\n" && exit 1
        ;;
esac

